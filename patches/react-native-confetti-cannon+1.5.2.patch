diff --git a/node_modules/react-native-confetti-cannon/src/index.js b/node_modules/react-native-confetti-cannon/src/index.js
index 7092e70..067d7ee 100644
--- a/node_modules/react-native-confetti-cannon/src/index.js
+++ b/node_modules/react-native-confetti-cannon/src/index.js
@@ -60,6 +60,11 @@ export const DEFAULT_COLORS: Array<string> =[
 export const DEFAULT_EXPLOSION_SPEED = 350;
 export const DEFAULT_FALL_SPEED = 3000;
 
+// set radius to 0.5 to keep the whole explosion inside the screen bounds.
+const RADIUS = 0.75;
+const CENTER_X = 0.5;
+const CENTER_Y = 0.5;
+
 class Explosion extends React.PureComponent<Props, State> {
   props: Props;
   state: State = {
@@ -108,17 +113,32 @@ class Explosion extends React.PureComponent<Props, State> {
 
     const difference = items.length < count ? count - items.length : 0;
 
-    const newItems = Array(difference).fill().map((): Item => ({
-      leftDelta: randomValue(0, 1),
-      topDelta: randomValue(TOP_MIN, 1),
-      swingDelta: randomValue(0.2, 1),
-      speedDelta: {
-        rotateX: randomValue(0.3, 1),
-        rotateY: randomValue(0.3, 1),
-        rotateZ: randomValue(0.3, 1)
-      },
-      color: randomColor(colors)
-    }));
+    const newItems = Array(difference).fill().map((): Item => 
+      {
+        // generate a round-ish explosion rather than a square one
+        const rx = Math.random() * RADIUS;
+        const ry = Math.random() * RADIUS/2;
+        const theta = Math.random() * 2 * Math.PI;
+
+        const x = rx * Math.cos(theta);
+        const y = ry * Math.sin(theta);
+
+        const finalX = CENTER_X + x;
+        const finalY = CENTER_Y + y;
+
+        return {
+
+          leftDelta: finalX,
+          topDelta: finalY,
+          swingDelta: randomValue(0.2, 1),
+          speedDelta: {
+            rotateX: randomValue(0.3, 1),
+            rotateY: randomValue(0.3, 1),
+            rotateZ: randomValue(0.3, 1)
+          },
+          color: randomColor(colors)
+        }
+    });
 
     return items
       .slice(0, count)
@@ -185,6 +205,8 @@ class Explosion extends React.PureComponent<Props, State> {
     return (
       <React.Fragment>
         {items.map((item: Item, index: number) => {
+
+
           const left = this.animation.interpolate({
             inputRange: [0, 1, 2],
             outputRange: [origin.x, item.leftDelta * width, item.leftDelta * width]
@@ -210,8 +232,8 @@ class Explosion extends React.PureComponent<Props, State> {
             outputRange: [0, -(item.swingDelta * 30), (item.swingDelta * 30), 0]
           });
           const opacity = this.animation.interpolate({
-            inputRange: [0, 1, 1.8, 2],
-            outputRange: [1, 1, 1, fadeOut ? 0 : 1]
+            inputRange: [0, 0.1, 1, 1.8, 2], //make confetti not initially visible
+            outputRange: [0, 1, 1, 1, fadeOut ? 0 : 1]
           });
           const containerTransform = [{translateX: left}, {translateY: top}];
           const transform = [{rotateX}, {rotateY}, {rotate: rotateZ}, {translateX}];
